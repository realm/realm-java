Instructions for setting up TightDB for a new or existing project using Maven
=============================================================================

1. Create a new Maven project (or skip this step if you have an existing project).
 
2. Copy the native TightDB library to the project's "lib" folder (<project>/lib).
- Note: create the "lib" folder if it doesn't exist in the project root.

3. Download and install the tightdb-devkit.jar and tightdb-devkit.jar libraries into the local Maven repository:

	mvn install:install-file -Dfile=tightdb.jar -DgroupId=com.tightdb -DartifactId=tightdb -Dversion=1.1.0 -Dpackaging=JAR
	mvn install:install-file -Dfile=tightdb-devkit.jar -DgroupId=com.tightdb -DartifactId=tightdb-devkit -Dversion=1.1.0 -Dpackaging=JAR

4. Add the TightDB JAR as a Maven dependency (in <dependencies> ... </dependencies>) in pom.xml:

	<dependency>
		<groupId>com.tightdb</groupId>
		<artifactId>tightdb</artifactId>
		<version>1.1.0</version>
	</dependency>

5. Configure Java compiler (to version 1.6 or 1.7) in pom.xml (in <build> <plugins> ... </plugins> </build> file zone):

	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-compiler-plugin</artifactId>
		<version>2.3.2</version>
	    <configuration>
	    	<source>1.6</source>
	        <target>1.6</target>
	    </configuration>
	</plugin>

6. Configure the annotation processing in pom.xml (in <build> <plugins> ... </plugins> </build> file zone):

	<plugin>
		<groupId>org.bsc.maven</groupId>
		<artifactId>maven-processor-plugin</artifactId>
		<version>2.0.5</version>
		<executions>
			<execution>
			<goals>
				<goal>process</goal>
			</goals>
			<configuration>
			    <processors>
				    <processor>com.tightdb.generator.CodeGenProcessor</processor>
			    </processors>
			    <outputDirectory>${project.build.directory}/generated</outputDirectory>
			</configuration>
			</execution>
		</executions>
		<dependencies>
			<dependency>
				<groupId>com.tightdb</groupId>
				<artifactId>tightdb-devkit</artifactId>
				<version>1.1.0</version>
			</dependency>
		</dependencies>
 	</plugin>

6. Executing "mvn clean compile" will generate the source files (deleting the previously generated files).
- Note: This step configures the annotation-driven code generator (that's part of TightDB) to execute as annotation processor.
        The output folder for the generated sources is configured as "${project.build.directory}/generated", which translates
        to "target/generated" for a typical Maven layout. The tightdb-devkit library does the code generation at compile-time, 
        and it's not required at run-time, so it's added only as plug-in dependency. 