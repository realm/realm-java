buildscript {
    def projectDependencies = new Properties()
    projectDependencies.load(new FileInputStream("${rootDir}/../dependencies.list"))
    ext.kotlin_version = '1.2.50'
    ext.dokka_version = '0.9.16'
    repositories {
        mavenLocal()
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${projectDependencies.get('GRADLE_BUILD_TOOLS')}"
        classpath 'de.undercouch:gradle-download-task:3.3.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath 'com.novoda:gradle-android-command-plugin:1.7.1'
        classpath 'com.github.skhatri:gradle-s3-plugin:1.0.4'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:${projectDependencies.get('BUILD_INFO_EXTRACTOR_GRADLE')}"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${projectDependencies.get('GRADLE_BINTRAY_PLUGIN')}"
        classpath "io.realm:realm-transformer:${file('../version.txt').text.trim()}"
        classpath "io.realm:realm-library-build-transformer:${file('../version.txt').text.trim()}"
        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.13'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
    }
}

allprojects {
    def props = new Properties()
    props.load(new FileInputStream("${rootDir}/../realm.properties"))
    props.each { key, val ->
        project.ext.set(key, val)
    }

    def projectDependencies = new Properties()
    projectDependencies.load(new FileInputStream("${rootDir}/../dependencies.list"))
    project.ext.minSdkVersion = 9
    project.ext.compileSdkVersion = 26
    project.ext.buildToolsVersion = projectDependencies.get("ANDROID_BUILD_TOOLS")

    group = 'io.realm'
    version = file("${rootDir}/../version.txt").text.trim()
    repositories {
        mavenLocal()
        google()
        jcenter()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = project.gradleVersion
    distributionType = 'all'
}
