apply plugin: 'kotlin'
apply plugin: 'maven'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def properties = new Properties()
properties.load(new FileInputStream("${projectDir}/../../dependencies.list"))

dependencies {
    implementation "com.squareup:javawriter:2.5.1"
    implementation "io.realm:realm-annotations:${version}"
    implementation "org.mongodb:bson:${properties.getProperty('BSON_DEPENDENCY')}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation files(Jvm.current().toolsJar)
    testImplementation files('../realm-library/build/intermediates/aar_main_jar/baseRelease/classes.jar') // Java projects cannot depend on AAR files
    testImplementation group:'junit', name:'junit', version:'4.12'
    testImplementation group:'com.google.testing.compile', name:'compile-testing', version:'0.19'
    testImplementation files(file("${System.env.ANDROID_HOME}/platforms/android-29/android.jar"))
}

// for Ant filter
import org.apache.tools.ant.filters.ReplaceTokens
import org.gradle.internal.jvm.Jvm

task generateVersionClass(type: Copy) {
    from 'src/main/templates/Version.java'
    into 'build/generated-src/main/java/io/realm/processor'
    filter(ReplaceTokens, tokens: [version: version])
    outputs.upToDateWhen { false }
}

// Include the generated Version file
sourceSets {
    main {
        java {
            srcDir 'build/generated-src/main/java'
        }
    }
}

compileKotlin.dependsOn generateVersionClass
compileTestJava.dependsOn ':realm-library:assembleBaseRelease'

apply from: "${rootDir}/../mavencentral-publish.gradle"

publishing {
    publications {
        basePublication(MavenPublication) {
            groupId 'io.realm'
            artifactId = 'realm-annotations-processor'
            from components.java
            populatePom(
                it,
                'realm-annotations-processor',
                'Annotation Processor for Realm. Realm is a mobile database: Build better apps, faster.'
            )
        }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-XXLanguage:+InlineClasses"]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
