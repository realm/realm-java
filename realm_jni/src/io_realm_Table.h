/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_realm_Table */

#ifndef _Included_io_realm_Table
#define _Included_io_realm_Table
#ifdef __cplusplus
extern "C" {
#endif
#undef io_realm_Table_INFINITE
#define io_realm_Table_INFINITE -1LL
/*
 * Class:     io_realm_Table
 * Method:    createNative
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_createNative
  (JNIEnv *, jobject);

/*
 * Class:     io_realm_Table
 * Method:    nativeClose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeClose
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeIsValid
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_io_realm_Table_nativeIsValid
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeEquals
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_io_realm_Table_nativeEquals
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeIsRootTable
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_io_realm_Table_nativeIsRootTable
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeAddColumn
 * Signature: (JILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeAddColumn
  (JNIEnv *, jobject, jlong, jint, jstring);

/*
 * Class:     io_realm_Table
 * Method:    nativeRemoveColumn
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeRemoveColumn
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeRenameColumn
 * Signature: (JJLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeRenameColumn
  (JNIEnv *, jobject, jlong, jlong, jstring);

/*
 * Class:     io_realm_Table
 * Method:    nativeUpdateFromSpec
 * Signature: (JLio/realm/TableSpec;)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeUpdateFromSpec
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     io_realm_Table
 * Method:    nativeSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeSize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeClear
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeClear
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetColumnCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeGetColumnCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetTableSpec
 * Signature: (J)Lio/realm/TableSpec;
 */
JNIEXPORT jobject JNICALL Java_io_realm_Table_nativeGetTableSpec
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetColumnName
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_io_realm_Table_nativeGetColumnName
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetColumnIndex
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeGetColumnIndex
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetColumnType
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_io_realm_Table_nativeGetColumnType
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeRemove
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeRemove
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeRemoveLast
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeRemoveLast
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeMoveLastOver
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeMoveLastOver
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeAddEmptyRow
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeAddEmptyRow
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetSortedView
 * Signature: (JJZ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeGetSortedView
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     io_realm_Table
 * Method:    nativeInsertFloat
 * Signature: (JJJF)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeInsertFloat
  (JNIEnv *, jobject, jlong, jlong, jlong, jfloat);

/*
 * Class:     io_realm_Table
 * Method:    nativeInsertDouble
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeInsertDouble
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     io_realm_Table
 * Method:    nativeInsertLong
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeInsertLong
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeInsertBoolean
 * Signature: (JJJZ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeInsertBoolean
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     io_realm_Table
 * Method:    nativeInsertDate
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeInsertDate
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeInsertString
 * Signature: (JJJLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeInsertString
  (JNIEnv *, jobject, jlong, jlong, jlong, jstring);

/*
 * Class:     io_realm_Table
 * Method:    nativeInsertMixed
 * Signature: (JJJLio/realm/Mixed;)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeInsertMixed
  (JNIEnv *, jobject, jlong, jlong, jlong, jobject);

/*
 * Class:     io_realm_Table
 * Method:    nativeInsertByteArray
 * Signature: (JJJ[B)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeInsertByteArray
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     io_realm_Table
 * Method:    nativeInsertSubtable
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeInsertSubtable
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeInsertDone
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeInsertDone
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetLong
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeGetLong
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetBoolean
 * Signature: (JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_io_realm_Table_nativeGetBoolean
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetFloat
 * Signature: (JJJ)F
 */
JNIEXPORT jfloat JNICALL Java_io_realm_Table_nativeGetFloat
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetDouble
 * Signature: (JJJ)D
 */
JNIEXPORT jdouble JNICALL Java_io_realm_Table_nativeGetDouble
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetDateTime
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeGetDateTime
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetString
 * Signature: (JJJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_io_realm_Table_nativeGetString
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetByteArray
 * Signature: (JJJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_io_realm_Table_nativeGetByteArray
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetMixedType
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_io_realm_Table_nativeGetMixedType
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetMixed
 * Signature: (JJJ)Lio/realm/Mixed;
 */
JNIEXPORT jobject JNICALL Java_io_realm_Table_nativeGetMixed
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetSubtable
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeGetSubtable
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetSubtableDuringInsert
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeGetSubtableDuringInsert
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetSubtableSize
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeGetSubtableSize
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeClearSubtable
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeClearSubtable
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetRowPtr
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeGetRowPtr
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeSetLong
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeSetLong
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeSetBoolean
 * Signature: (JJJZ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeSetBoolean
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     io_realm_Table
 * Method:    nativeSetFloat
 * Signature: (JJJF)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeSetFloat
  (JNIEnv *, jobject, jlong, jlong, jlong, jfloat);

/*
 * Class:     io_realm_Table
 * Method:    nativeSetDouble
 * Signature: (JJJD)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeSetDouble
  (JNIEnv *, jobject, jlong, jlong, jlong, jdouble);

/*
 * Class:     io_realm_Table
 * Method:    nativeSetDate
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeSetDate
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeSetString
 * Signature: (JJJLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeSetString
  (JNIEnv *, jobject, jlong, jlong, jlong, jstring);

/*
 * Class:     io_realm_Table
 * Method:    nativeSetByteArray
 * Signature: (JJJ[B)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeSetByteArray
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     io_realm_Table
 * Method:    nativeSetMixed
 * Signature: (JJJLio/realm/Mixed;)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeSetMixed
  (JNIEnv *, jobject, jlong, jlong, jlong, jobject);

/*
 * Class:     io_realm_Table
 * Method:    nativeAddInt
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeAddInt
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeSetIndex
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeSetIndex
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeHasIndex
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_io_realm_Table_nativeHasIndex
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeSumInt
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeSumInt
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeMaximumInt
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeMaximumInt
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeMinimumInt
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeMinimumInt
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeAverageInt
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_io_realm_Table_nativeAverageInt
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeSumFloat
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_io_realm_Table_nativeSumFloat
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeMaximumFloat
 * Signature: (JJ)F
 */
JNIEXPORT jfloat JNICALL Java_io_realm_Table_nativeMaximumFloat
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeMinimumFloat
 * Signature: (JJ)F
 */
JNIEXPORT jfloat JNICALL Java_io_realm_Table_nativeMinimumFloat
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeAverageFloat
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_io_realm_Table_nativeAverageFloat
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeSumDouble
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_io_realm_Table_nativeSumDouble
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeMaximumDouble
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_io_realm_Table_nativeMaximumDouble
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeMinimumDouble
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_io_realm_Table_nativeMinimumDouble
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeAverageDouble
 * Signature: (JJ)D
 */
JNIEXPORT jdouble JNICALL Java_io_realm_Table_nativeAverageDouble
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeMaximumDate
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeMaximumDate
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeMinimumDate
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeMinimumDate
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeCountLong
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeCountLong
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeCountFloat
 * Signature: (JJF)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeCountFloat
  (JNIEnv *, jobject, jlong, jlong, jfloat);

/*
 * Class:     io_realm_Table
 * Method:    nativeCountDouble
 * Signature: (JJD)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeCountDouble
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     io_realm_Table
 * Method:    nativeCountString
 * Signature: (JJLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeCountString
  (JNIEnv *, jobject, jlong, jlong, jstring);

/*
 * Class:     io_realm_Table
 * Method:    nativeWhere
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeWhere
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindFirstInt
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindFirstInt
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindFirstBool
 * Signature: (JJZ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindFirstBool
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindFirstFloat
 * Signature: (JJF)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindFirstFloat
  (JNIEnv *, jobject, jlong, jlong, jfloat);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindFirstDouble
 * Signature: (JJD)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindFirstDouble
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindFirstDate
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindFirstDate
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindFirstString
 * Signature: (JJLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindFirstString
  (JNIEnv *, jobject, jlong, jlong, jstring);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindAllInt
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindAllInt
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindAllBool
 * Signature: (JJZ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindAllBool
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindAllFloat
 * Signature: (JJF)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindAllFloat
  (JNIEnv *, jobject, jlong, jlong, jfloat);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindAllDouble
 * Signature: (JJD)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindAllDouble
  (JNIEnv *, jobject, jlong, jlong, jdouble);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindAllDate
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindAllDate
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeFindAllString
 * Signature: (JJLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeFindAllString
  (JNIEnv *, jobject, jlong, jlong, jstring);

/*
 * Class:     io_realm_Table
 * Method:    nativeLookup
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeLookup
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     io_realm_Table
 * Method:    nativeLowerBoundInt
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeLowerBoundInt
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeUpperBoundInt
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeUpperBoundInt
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativePivot
 * Signature: (JJJIJ)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativePivot
  (JNIEnv *, jobject, jlong, jlong, jlong, jint, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeGetDistinctView
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_io_realm_Table_nativeGetDistinctView
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeOptimize
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_realm_Table_nativeOptimize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeToJson
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_io_realm_Table_nativeToJson
  (JNIEnv *, jobject, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeToString
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_io_realm_Table_nativeToString
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     io_realm_Table
 * Method:    nativeRowToString
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_io_realm_Table_nativeRowToString
  (JNIEnv *, jobject, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
