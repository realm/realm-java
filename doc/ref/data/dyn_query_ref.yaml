#
# Javareference documentation for TableQuery class
#

## TODO add tableview(tableview)
##  TODO add alias names
##  TODO add Date/binary query - when available

## TODO: Describe limitations about using correct versions of the methods on the right column_types.
## TODO: Detail what is allowed to pass in parameters (index within size() etc)
## TODO: Describe start, end index parameters in searches. end is not inclusive.

ID         : class_dyn_query
TITLE      : TableQuery(dynamic)
SUMMARY    : *g_dyn_query_intro_summary
DESCR      : *g_dyn_query_intro_descr
SEE        : *g_dyn_query_intro_see
EXAMPLES   :
- DESCR:
  CODE: ex_java_dyn_query_intro
IGNORE     : []                   # List of method-ids to ignore
#  - g_dyn_query_find_all_const:

CATEGORIES :
- Conditions:
  METHODS:
  - g_dyn_query_equals_integer:
  - g_dyn_query_equals_float:
  - g_dyn_query_equals_double:
  - g_dyn_query_equals_boolean:
  - g_dyn_query_equals_string:
  - g_dyn_query_equals_date:
#todo  - g_dyn_query_equals_binary:
      TITLE    : equal
      ALIAS    : eq
      NAMES    : [ equal, equal, equal, equal, equal, equal] # equal_binary ]
      SIGNATURE: |
                 TableQuery equal(long columnIndex, boolean value);
                 TableQuery equal(long columnIndex, long value);
                 TableQuery equal(long columnIndex, float value);
                 TableQuery equal(long columnIndex, double value);
                 TableQuery equal(long columnIndex, String value);
                 TableQuery equal(long columnIndex, String value, boolean caseSensitive);
                 TableQuery equal(long columnIndex, Date value);
#                 TableQuery equal(long columnIndex, ByteBuffer value);
      SUMMARY  : *g_dyn_query_equals_summary
      DESCR    : *g_dyn_query_equals_descr
      PARAMS:
      - NAME   : columnIndex
        TYPES  : long
        DESCR  : Column index.
      - NAME   : value
        TYPES  : [boolean, long, float, double, String, ByteBuffer, Date]
        DESCR  : The value.
      - NAME   : caseSensitive
        TYPES  : boolean
        DESCR  : &g_dyn_query_equals_string
                 'String match can be performed case sensitive or not. Default: <code>true</code>.'
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_equals
  - g_dyn_query_notEquals_integer:
  - g_dyn_query_notEquals_float:
  - g_dyn_query_notEquals_double:
  - g_dyn_query_notEquals_string:
  - g_dyn_query_notEquals_date:
#  - g_dyn_query_notEquals_binary:
      TITLE    : notEqual
      ALIAS    : neq
      NAMES    : [ notEqual, notEqual, notEqual, notEqual, notEqual ] # not_equal_binary ]
      SIGNATURE: |
                 TableQuery notEqual(long columnIndex, long value);
                 TableQuery notEqual(long columnIndex, float value);
                 TableQuery notEqual(long columnIndex, double value);
                 TableQuery notEqual(long columnIndex, String value);
                 TableQuery notEqual(long columnIndex, String value, boolean caseSensitive);
                 TableQuery notEqual(long columnIndex, Date value);
#todo                 TableQuery notEqual(long columnIndex, boolean value);
 #                TableQuery notEqual_binary(long columnIndex, String data, long size);
      SUMMARY  : *g_dyn_query_notEquals_summary
      DESCR    : *g_dyn_query_notEquals_descr
      PARAMS:
      - NAME   : columnIndex
        TYPES  : long
        DESCR  : Column index.
      - NAME   : value
        TYPES  : [long, float, double, String]
        DESCR  : The value.
      - NAME   : caseSensitive
        TYPES  : boolean
        DESCR  : *g_dyn_query_equals_string
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_notEquals
  - g_dyn_query_greaterThan_integer:
  - g_dyn_query_greaterThan_float:
  - g_dyn_query_greaterThan_double:
  - g_dyn_query_greaterThan_date:
      TITLE    : greaterThan
      ALIAS    : gt
      NAMES    : [greaterThan, greaterThan, greaterThan, greaterThan]
      SIGNATURE: |
                 TableQuery greaterThan(long columnIndex, long value);
                 TableQuery greaterThan(long columnIndex, float value);
                 TableQuery greaterThan(long columnIndex, double value);
                 TableQuery greaterThan(long columnIndex, Date value);
      SUMMARY  : *g_dyn_query_greaterThan_summary
      DESCR    : *g_dyn_query_greaterThan_descr
      PARAMS:
      - NAME   : columnIndex
        TYPES  : long
        DESCR  : Column index.
      - NAME   : value
        TYPES  : [long, float, double]
        DESCR  : The value.
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_greaterThan
  - g_dyn_query_greaterThanOrEqual_integer:
  - g_dyn_query_greaterThanOrEqual_float:
  - g_dyn_query_greaterThanOrEqual_double:
  - g_dyn_query_greaterThanOrEqual_date:
      TITLE    : greaterThanOrEqual
      ALIAS    : gte
      NAMES    : [greaterThanOrEqual, greaterThanOrEqual, greaterThanOrEqual, greaterThanOrEqual]
      SIGNATURE: |
                 TableQuery greaterThanOrEqual(long columnIndex, long value);
                 TableQuery greaterThanOrEqual(long columnIndex, float value);
                 TableQuery greaterThanOrEqual(long columnIndex, double value);
                 TableQuery greaterThanOrEqual(long columnIndex, Date value);
      SUMMARY  : *g_dyn_query_greaterThanOrEqual_summary
      DESCR    : *g_dyn_query_greaterThanOrEqual_descr
      PARAMS:
      - NAME   : columnIndex
        TYPES  : long
        DESCR  : Column index.
      - NAME   : value
        TYPES  : [long, float, double, Date]
        DESCR  : The value.
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_greaterThanOrEqual

  - g_dyn_query_lessThan_integer:
  - g_dyn_query_lessThan_float:
  - g_dyn_query_lessThan_double:
  - g_dyn_query_lessThan_date:
      TITLE    : lessThan
      ALIAS    : lt
      NAMES    : [lessThan, lessThan, lessThan, lessThan]
      SIGNATURE: |
                 TableQuery lessThan(long columnIndex, long value);
                 TableQuery lessThan(long columnIndex, float value);
                 TableQuery lessThan(long columnIndex, double value);
                 TableQuery lessThan(long columnIndex, Date value);
      SUMMARY  : *g_dyn_query_lessThan_summary
      DESCR    : *g_dyn_query_lessThan_descr
      PARAMS:
      - NAME   : columnIndex
        TYPES  : long
        DESCR  : Column index.
      - NAME   : value
        TYPES  : [long, float, double, Date]
        DESCR  : The value.
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_lessThan

  - g_dyn_query_lessThanOrEqual_integer:
  - g_dyn_query_lessThanOrEqual_float:
  - g_dyn_query_lessThanOrEqual_double:
  - g_dyn_query_lessThanOrEqual_date:
      TITLE    : lessThanOrEqual
      ALIAS    : lte
      NAMES    : [lessThanOrEqual, lessThanOrEqual, lessThanOrEqual, lessThanOrEqual]
      SIGNATURE: |
                 TableQuery lessThanOrEqual(long columnIndex, long value);
                 TableQuery lessThanOrEqual(long columnIndex, long value);
                 TableQuery lessThanOrEqual(long columnIndex, long value);
                 TableQuery lessThanOrEqual(long columnIndex, Date value);
      SUMMARY  : *g_dyn_query_lessThanOrEqual_summary
      DESCR    : *g_dyn_query_lessThanOrEqual_descr
      PARAMS:
      - NAME   : columnIndex
        TYPES  : long
        DESCR  : Column index.
      - NAME   : value
        TYPES  : [long, float, double, Date]
        DESCR  : The value.
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_lessThanOrEqual

  - g_dyn_query_between_integer:
  - g_dyn_query_between_float:
  - g_dyn_query_between_double:
  - g_dyn_query_between_date:
      TITLE    : between
      NAMES    : [between, between, between, between]
      SIGNATURE: |
                 TableQuery between(long columnIndex, long from, long to);
                 TableQuery between(long columnIndex, float from, float to);
                 TableQuery between(long columnIndex, double from, double to);
                 TableQuery between(long columnIndex, Date from, Date to);
      DESCR    : *g_dyn_query_between_descr
      SUMMARY  : *g_dyn_query_between_summary
      PARAMS:
      - NAME   : columnIndex
        TYPES  : long
        DESCR  : Column index.
      - NAME   : from
        TYPES  : [long, float, double, Date]
        DESCR  : Lower bound of range (inclusive).
      - NAME   : to
        TYPES  : [long, float, double, Date]
        DESCR  : Upper bound of range (inclusive).
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_between
  - g_dyn_query_startsWith:
#  - g_dyn_query_startsWith_binary:
      TITLE    : beginsWith
      NAMES    : [beginsWith] #, begins_with_binary]
      SIGNATURE: |
                 TableQuery beginsWith(long columnIndex, String value);
                 TableQuery beginsWith(long columnIndex, String value, boolean caseSensitive);
#                 TableQuery beginsWith_binary(long columnIndex, String data, long size);
      DESCR    : *g_dyn_query_startsWith_descr
      SUMMARY  : *g_dyn_query_startsWith_summary
      PARAMS:
      - NAME   : columnIndex
        TYPES  : long
        DESCR  : Column index.
      - NAME   : value
        TYPES  : String
        DESCR  : The value.
      - NAME   : caseSensitive
        TYPES  : boolean
        DESCR  : *g_dyn_query_case_sensitive_descr
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_startsWith
  - g_dyn_query_endsWith:
#todo  - g_dyn_query_endsWith_binary:
      NAMES    : endsWith
      SIGNATURE: |
                 TableQuery endsWith(long columnIndex, String value);
                 TableQuery endsWith(long columnIndex, String value, boolean caseSensitive);
#                 TableQuery endsWith(long columnIndex, String data, long size);
      DESCR    : *g_dyn_query_endsWith_descr
      SUMMARY  : *g_dyn_query_endsWith_summary
      PARAMS:
      - NAME   : columnIndex
        TYPES  : long
        DESCR  : Column index.
      - NAME   : value
        TYPES  : String
        DESCR  : The value.
      - NAME   : caseSensitive
        TYPES  : boolean
        DESCR  : *g_dyn_query_case_sensitive_descr
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_endsWith
  - g_dyn_query_contains:
#todo  - g_dyn_query_contains_binary:
      NAMES    : contains
      SIGNATURE: |
                 TableQuery contains(long columnIndex, String value);
                 TableQuery contains(long columnIndex, String value, boolean caseSensitive);
#                 TableQuery contains(long columnIndex, String data, long size);
      DESCR    : *g_dyn_query_contains_descr
      SUMMARY  : *g_dyn_query_contains_summary
      PARAMS:
      - NAME   : columnIndex
        TYPES  : long
        DESCR  : Column index.
      - NAME   : value
        TYPES  : String
        DESCR  : The value.
      - NAME   : caseSensitive
        TYPES  : boolean
        DESCR  : *g_dyn_query_case_sensitive_descr
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_contains


- Combiners:
  METHODS:
  - g_dyn_query_group:
      NAMES    : group
      DESCR    : *g_dyn_query_group_descr
      SUMMARY  : *g_dyn_query_group_summary
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_group
  - g_dyn_query_endGroup:
      NAMES    : endGroup
      DESCR    : *g_dyn_query_endGroup_descr
      SUMMARY  : *g_dyn_query_endGroup_summary
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_group
  - g_dyn_query_or:
      NAMES    : or
      DESCR    : *g_dyn_query_or_descr
      SUMMARY  : *g_dyn_query_or_summary
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_or
  - g_dyn_query_subtable:
      NAMES    : subTable
      DESCR    : *g_dyn_query_subtable_descr
      SUMMARY  : *g_dyn_query_subtable_summary
      PARAMS:
      - NAME   : column
        TYPES  : long
        DESCR  : Column index.
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_subtable
  - g_dyn_query_endSubtable:
      NAMES    : endSubTable
      DESCR    : *g_dyn_query_endSubtable_descr
      SUMMARY  : *g_dyn_query_endSubtable_summary
      RETURN:
        TYPES  : TableQuery
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_subtable


- Actions:
  METHODS:
  - g_dyn_query_find_all:
      NAMES    : findAll
      DESCR    : *g_dyn_query_find_all_descr
      SUMMARY  : *g_dyn_query_find_all_summary
      SIGNATURE: |
                 TableView findAll();
                 TableView findAll(long start, long end, long limit);
      PARAMS:
      - NAME   : start
        TYPES  : long
        DESCR  : "Row to begin search. First row is 0."
      - NAME   : end
        TYPES  : long
        DESCR  : "Row to stop search (-1 means infinity)."
      - NAME   : limit
        TYPES  : long
        DESCR  : "Maximum number of rows to search (-1  means infinity)."
      RETURN:
        TYPES  : TableView
        DESCR  : *g_dyn_query_find_all_return_desc
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_findall
  - g_dyn_query_find_next:
      NAMES    : findNext
      DESCR    : *g_dyn_query_find_next_descr
      SUMMARY  : *g_dyn_query_find_next_summary
      SIGNATURE: |
                 long findNext();
                 long findNext(long lastRow);
      PARAMS:
      - NAME   : lastRow
        TYPES  : long
        DESCR  : *g_dyn_query_find_next_parm1_descr
      RETURN:
        TYPES  : long
        DESCR  : *g_dyn_query_find_next
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_find_next

  - g_dyn_query_count:
      NAMES    : count
      DESCR    : *g_dyn_query_size_descr
      SUMMARY  : *g_dyn_query_size_summary
      SIGNATURE: |
                 long count()
                 long count(long start, long end)
      PARAMS:
      - NAME   : start
        TYPES  : long
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : long
        DESCR  : "Row to stop search. Default: -1 (infinity)."
# TODO     - NAME   : limit
#        TYPES  : long
#        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : long
        DESCR  : The number of matching rows.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_size

  - g_dyn_query_sum:
  - g_dyn_query_sum_float:
  - g_dyn_query_sum_double:
      TITLE    : sum*
      NAMES    : [sum, sumFloat, sumDouble]
      DESCR    : *g_dyn_query_sum_descr
      SUMMARY  : *g_dyn_query_sum_summary
      SIGNATURE: |
                 long   sum(long columnIndex)
                 long   sum(long columnIndex, long start, long end)
                 double sumFloat(long columnIndex)
                 double sumFloat(long columnIndex, long start, long end)
                 double sumDouble(long columnIndex)
                 double sumDouble(long columnIndex, long start, long end)
      PARAMS:
      - NAME   : columnIndex
        DESCR  : *g_dyn_query_sum_parm1_desc
        TYPES  : long
      - NAME   : start
        TYPES  : long
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : long
        DESCR  : "Row to stop search. Default: -1 (infinity)."
#      - NAME   : limit
#        TYPES  : long
#        DESCR  : "Maximum number of rows to search. Default: -1 (infinity)."
      RETURN:
        TYPES  : [long, double, double]
        DESCR  : The sum.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_sum

#todo  - g_dyn_query_maximum_date:
  - g_dyn_query_maximum:
  - g_dyn_query_maximum_float:
  - g_dyn_query_maximum_double:
      TITLE    : maximum*
      NAMES    : [maximum, maximumFloat, maximumDouble]
      DESCR    : *g_dyn_query_maximum_descr
      SUMMARY  : *g_dyn_query_maximum_summary
      SIGNATURE: |
                 long   maximum(long columnIndex)
                 long   maximum(long columnIndex, long start, long end)
                 long   maximumFloat(long columnIndex)
                 float  maximumFloat(long columnIndex, long start, long end)
                 long   maximumDouble(long columnIndex)
                 double maximumDouble(long columnIndex, long start, long end)
#                 Date  maximumDate(long columnIndex, long start, long end, long limit)
      PARAMS:
      - NAME   : columnIndex
        DESCR  : Column index. The datatype of the column must match the function called. E.g. <code>maximum_float()</code> can only be used on columns which contains floats.
        TYPES  : long
      - NAME   : start
        TYPES  : long
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : long
        DESCR  : "Row to stop search. Default: -1 (infinity)."
#TODO      - NAME   : limit
#        TYPES  : long
#        DESCR  : "Maximum number of rows to search. Default: -1 (infinity)."
      RETURN:
        TYPES  : [long, float, double] #, Date]
        DESCR  : The highest value.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_maximum
#todo  - g_dyn_query_minimum_date:
  - g_dyn_query_minimum:
  - g_dyn_query_minimum_float:
  - g_dyn_query_minimum_double:
      TITLE    : minimum*
      NAMES    : [minimum, minimumFloat, minimumDouble] #, minimum_date]
      DESCR    : *g_dyn_query_minimum_descr
      SUMMARY  : *g_dyn_query_minimum_summary
      SIGNATURE: |
                 long   minimum(long columnIndex)
                 long   minimum(long columnIndex, long start, long end)
                 long   minimumFloat(long columnIndex)
                 float  minimumFloat(long columnIndex, long start, long end)
                 long   minimumDouble(long columnIndex)
                 double minimumDouble(long columnIndex, long start, long end)
#                 Date  minimumDate(long columnIndex, long start, long end, long limit)
      PARAMS:
      - NAME   : columnIndex
        DESCR  : Column index. The datatype of the column must match the function called. E.g. <code>minimum_float()</code> can only be used on columns which contains floats.
        TYPES  : long
      - NAME   : start
        TYPES  : long
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : long
        DESCR  : "Row to stop search. Default: -1 (infinity)."
 #TODO     - NAME   : limit
 #       TYPES  : long
 #       DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : [long, float, double] #, Date]
        DESCR  : The lowest value.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_minimum

  - g_dyn_query_average:
  - g_dyn_query_average_float:
  - g_dyn_query_average_double:
      TITLE    : average*
      NAMES    : [average, averageFloat, averageDouble]
      SUMMARY  : *g_dyn_query_average_summary
      DESCR    : *g_dyn_query_average_descr
      SIGNATURE: |
                 double average(long columnIndex)
                 double average(long columnIndex, long start, long end)
                 double averageFloat(long columnIndex)
                 double averageFloat(long columnIndex, long start, long end)
                 double averageDouble(long columnIndex)
                 double averageDouble(long columnIndex, long start, long end)
      PARAMS:
      - NAME   : columnIndex
        DESCR  : Column index. The datatype of the column must match the function called. E.g. <code>average_float()</code> can only be used on columns which contains floats.
        TYPES  : long
      - NAME   : start
        TYPES  : long
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : long
        DESCR  : "Row to stop search. Default: -1 (infinity)."
#TODO      - NAME   : limit
#        TYPES  : long
#        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : double
        DESCR  : The average.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_average
  - g_dyn_query_remove:
      NAMES    : remove
      DESCR    : *g_dyn_query_remove_descr
      SUMMARY  : *g_dyn_query_remove_summary
      SIGNATURE: |
                 long remove()
                 long remove(long start, long end)
      PARAMS:
      - NAME   : start
        TYPES  : long
        DESCR  : "Row index to begin search. Default: 0."
      - NAME   : end
        TYPES  : long
        DESCR  : "Last row index to search. Default: -1 (infinity)."
 #     - NAME   : limit
 #       TYPES  : long
 #       DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : long
        DESCR  : The number of rows removed.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_java_dyn_query_remove
