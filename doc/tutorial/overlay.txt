@@Overlay: accessing_rows @@
To get the last row the <tt>last()</tt> method can be used:
@@EndOverlay

@@Overlay: bracket @@
the <tt>at</tt> method which returns a cursor to the row:
@@EndOverlay

@@Overlay: generated_classes @@
Using Java annotations a number of classes will be generated. For the <tt>people</tt> class you will have <tt>PeopleTable</tt> (the actual table), <tt>People</tt> (representing rows), <tt>PeopleQuery</tt> (query objects), and <tt>PeopleView</tt> (query results). These classes will then provide you a fully typesafe API
with your specific columns integrated. This gives you easy access to your named columns, typesafety and autocompletion.

<p>(For more dynamic datastructures unknown at compiletime, another "untyped" API is also available. Please checkout the reference documentation for details.)</p>
@@EndOverlay

@@Overlay: updating_entire_row @@
Replacing en entire row can be done like this - fully type safe:
@@EndOverlay

@@Overlay: output @@
<div class="code">
<pre>
John is 20 years old.
Mary is 21 years old.
Lars is 32 years old.
Eric is 50 years old.
Anni is 54 years old.
</pre>
</div>
@@EndOverlay@@

@@Overlay: execute_tutorial @@
Depending on how you manage your project there are different ways to setup annotation processing:
<ul>
    <li><a href="http://www.tightdb.com/documentation/Java_misc/40/Eclipse%20Setup">Eclipse Setup</a></li>
    <li><a href="http://www.tightdb.com/documentation/Java_misc/41/IntelliJ%20IDEA%20Setup">IntelliJ IDEA Setup</a></li>
    <li><a href="http://www.tightdb.com/documentation/Java_misc/60/Maven%20Setup">Maven Setup</a></li>
    <li><a href="http://www.tightdb.com/documentation/Java_misc/50/Ant%20Setup">Ant Setup</a></li>
</ul>
@@EndOverlay@@

@@Overlay: examples @@
Please check the <a href="http://www.tightdb.com/documentation/Java_misc/30/Examples/">Java Examples</a> page for further instructions.
@@EndOverlay@@
